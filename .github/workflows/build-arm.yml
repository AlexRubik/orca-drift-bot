name: Build Linux ARM Executable
on:
  workflow_dispatch:  # Allows manual triggering
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]

jobs:
  build-linux-arm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.18.1
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build TypeScript
      run: npm run build
    
    - name: Build ARMv7 executable using pre-built Docker image
      run: |
        docker run --rm -v ${{ github.workspace }}:/app -w /app node:20.18.1-buster bash -c '
          apt-get update
          apt-get install -y gcc g++ make python3 python-is-python3 build-essential
          npm install -g nexe
          npm install
          export PYTHON=python3
          npx nexe dist/index.js -o lp-bot-linux-armv7 -t linux-arm-20.18.1 --build --resource ".env" --resource "node_modules/crypto-browserify/**/*"
        '
      
    - name: Upload ARMv7 artifact
      uses: actions/upload-artifact@v4
      with:
        name: lp-bot-linux-armv7
        path: lp-bot-linux-armv7
        retention-days: 7

    - name: Create release if tagged
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: lp-bot-linux-armv7